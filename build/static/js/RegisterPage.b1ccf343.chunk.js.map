{"version":3,"sources":["views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.jsx"],"names":["module","exports","RegisterView","state","name","email","password","handlechange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","s","register_form","onSubmit","autoComplete","type","onChange","Button","variant","Component","mapDispatchToProps","register","connect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,cAAgB,sC,oLCK5BC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAC3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SACrB,OACE,uBACEW,UAAWC,IAAEC,cACbC,SAAUJ,KAAKL,aACfU,aAAa,MAHf,UAKE,yCAEE,uBACEC,KAAK,OACLlB,KAAK,OACLK,MAAOL,EACPmB,SAAUP,KAAKT,kBAGnB,0CAEE,uBACEe,KAAK,QACLlB,KAAK,QACLK,MAAOJ,EACPkB,SAAUP,KAAKT,kBAGnB,6CAEE,uBACEe,KAAK,WACLlB,KAAK,WACLK,MAAOH,EACPiB,SAAUP,KAAKT,kBAGnB,cAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUH,KAAK,SAA/B,4B,GArDmBI,aA6DrBC,EAAqB,CACzBZ,WAAYa,KAGCC,cAAQ,KAAMF,EAAdE,CAAkC3B","file":"static/js/RegisterPage.b1ccf343.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"register_form\":\"RegisterView_register_form__36Tgf\"};","import { Component } from 'react';\nimport s from './RegisterView.module.css';\nimport { connect } from 'react-redux';\nimport { register } from '../../redux/auth/auth-operations';\nimport { Button } from 'react-bootstrap';\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handlechange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n    return (\n      <form\n        className={s.register_form}\n        onSubmit={this.handleSubmit}\n        autoComplete=\"off\"\n      >\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handlechange}\n          ></input>\n        </label>\n        <label>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handlechange}\n          ></input>\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handlechange}\n          ></input>\n        </label>\n        <Button variant=\"primary\" type=\"submit\">\n          Sign up\n        </Button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}