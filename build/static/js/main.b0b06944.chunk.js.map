{"version":3,"sources":["redux/phoneBook/phoneBook-actions.js","Components/AuthNav/AuthNav.module.css","redux/phoneBook/phoneBook-reducer.js","redux/auth/auth-reducers.js","redux/store.js","Components/Navigation/Navigation.jsx","Components/AuthNav/AuthNav.jsx","Components/UserMenu/UserMenu.jsx","Components/AppBar/AppBar.jsx","Components/PrivateRoute.jsx","Components/PublicRoute.jsx","App.js","index.js","redux/auth/auth-selectors.js","Components/Navigation/Navigation.module.css","Components/UserMenu/UserMenu.module.css","redux/auth/auth-operations.js","redux/auth/auth-actions.js","App.module.css"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactRequest","getContactSuccess","getContactError","filterContact","module","exports","contacts","createReducer","state","payload","find","name","number","alert","filter","id","_","loading","error","combineReducers","initialUserState","email","user","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","setError","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phoneBook","phoneBookReducer","devTools","process","persistor","persistStore","connect","IsAuthenticated","getIsAuthenticated","Nav","className","exact","to","s","join","activeClassName","active","AuthNav","Button","variant","mapDispatchToProps","onLogout","logout","getUsername","user_menu","user_profile","Avatar","src","text","type","onClick","logout_btn","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Component","component","routeProps","render","props","restricted","HomeView","lazy","LoginView","RegisterView","PhoneBookView","App","this","onRefreshUser","fallback","color","height","width","timeout","path","getCurrentUser","ReactDOM","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","password","dispatch","a","registerRequest","post","response","data","message","login","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get"],"mappings":"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","file":"static/js/main.b0b06944.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n// экшены добавления контакта\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n// экшены удаления контакта\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n// єкшены получения контактов с бекенда\nexport const getContactRequest = createAction('contacts/getContactRequest');\nexport const getContactSuccess = createAction('contacts/getContactSuccess');\nexport const getContactError = createAction('contacts/getContactError');\n\n// экшен фильтра\nexport const filterContact = createAction('contacts/filter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_list\":\"AuthNav_nav_list__35uz1\",\"base\":\"AuthNav_base__1Mxax\",\"active\":\"AuthNav_active__1kZNt\",\"link\":\"AuthNav_link__1076-\"};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n  filterContact,\n} from './phoneBook-actions';\n// import { deleteContact } from './phoneBook-operations';\n\n// редюсер на тулкит\nconst contacts = createReducer([], {\n  // добавляем в редюсер только  Success\n  // получение сохраненных контактов с бекенда\n  [getContactSuccess]: (state, { payload }) => payload,\n  // добавление\n  [addContactSuccess]: (state, { payload }) =>\n    state.find(\n      ({ name, number }) => name === payload.name || number === payload.number,\n    )\n      ? alert('This subscriber is already in contacts')\n      : [...state, payload],\n\n  // удаление\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// фильтр\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [getContactRequest]: () => true,\n  [getContactSuccess]: () => false,\n  [getContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [getContactError]: (_, { payload }) => payload,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n  [getContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [loginError]: setError,\n  [logoutError]: setError,\n  [getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n  isAuthenticated,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\nimport authReducer from './auth/auth-reducers';\n// import persistStore from 'redux-persist/es/persistStore';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    // auth: authReducer,\n    phoneBook: phoneBookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n// export default { store };\n","import { NavLink } from 'react-router-dom';\nimport s from './Navigation.module.css';\nimport { Nav } from 'react-bootstrap';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\nimport { connect } from 'react-redux';\n\nconst Navigation = ({ IsAuthenticated }) => {\n  return (\n    <Nav className=\" mr-auto \">\n      <NavLink\n        exact\n        to=\"/\"\n        className={[s['base'], s['link']].join(' ')}\n        activeClassName={s.active}\n      >\n        Home\n      </NavLink>\n\n      {IsAuthenticated && (\n        <NavLink\n          to=\"/contacts\"\n          className={[s['base'], s['link']].join(' ')}\n          activeClassName={s.active}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </Nav>\n  );\n};\n\nconst mapStateToProps = state => ({\n  IsAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\nimport { Button, Nav } from 'react-bootstrap';\n\nconst AuthNav = () => {\n  return (\n    <Nav>\n      <Button variant=\"dark\">\n        <NavLink\n          to=\"/login\"\n          // className={[s['base'], s['link']].join(' ')}\n          // activeClassName={s.active}\n        >\n          Login\n        </NavLink>\n      </Button>\n      <Button variant=\"dark\">\n        <NavLink\n          to=\"/register\"\n          // className={[s['base'], s['link']].join(' ')}\n          // activeClassName={s.active}\n        >\n          Sign up\n        </NavLink>\n      </Button>\n    </Nav>\n  );\n};\n\nexport default AuthNav;\n","import { connect } from 'react-redux';\nimport s from './UserMenu.module.css';\nimport { getUsername } from '../../redux/auth/auth-selectors';\nimport { logout } from '../../redux/auth/auth-operations';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button } from 'react-bootstrap';\n\nconst UserMenu = ({ name, onLogout }) => {\n  return (\n    <div className={s.user_menu}>\n      <div className={s.user_profile}>\n        <Avatar src=\"/broken-image.jpg\" />\n        <p className={s.text}>Welcome, {name}</p>\n      </div>\n      <Button\n        type=\"button\"\n        variant=\"dark\"\n        onClick={onLogout}\n        className={s.logout_btn}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  name: getUsername(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import Navigation from '../Navigation';\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu';\nimport { Navbar } from 'react-bootstrap';\n// import s from './AppBar.module.css';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst AppBar = ({ isAuthenticated }) => {\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>Phonebook</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Navigation />\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(AppBar);\n","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\n// Если маршрут приватный и юзер залогинен, рендерим компонент\n// Если нет - то делаем редирект на страницу логина\n\nconst PrivateRoute = ({\n  component: Component,\n  IsAuthenticated,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      IsAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  IsAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\n// Если маршрут ограниченный (логин, регистрация) и юзер залогинен, то редирект на тел книгу\n// Иначе рендерит компонент\n\nconst PublicRoute = ({\n  component: Component,\n  IsAuthenticated,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      IsAuthenticated && routeProps.restricted ? (\n        <Redirect to=\"/contacts\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  IsAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport s from './App.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppBar from './Components/AppBar';\nimport { Switch, Route } from 'react-router-dom';\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"HomePage\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"LoginPage\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"RegisterPage\" */),\n);\nconst PhoneBookView = lazy(() =>\n  import('./views/PhoneBookView' /* webpackChunkName: \"ContactsPage\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRefreshUser();\n  }\n\n  render() {\n    return (\n      <div className={s.App}>\n        <AppBar />\n\n        <Suspense\n          fallback={\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#424141\"\n              height={60}\n              width={60}\n              timeout={3000}\n            />\n          }\n        >\n          <Switch>\n            <Route exact path=\"/\" component={HomeView} />\n            <PublicRoute path=\"/login\" component={LoginView} restricted />\n            <PublicRoute path=\"/register\" component={RegisterView} restricted />\n            <PrivateRoute path=\"/contacts\" component={PhoneBookView} />\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRefreshUser: getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <BrowserRouter>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// если юзер не залогинен то токен null т е  false, а если залогинен то токен строка т е  true\nexport const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nexport const getUsername = state => state.auth.user.name;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_list\":\"Navigation_nav_list__35GSD\",\"link\":\"Navigation_link___qjZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_menu\":\"UserMenu_user_menu__p5gjj\",\"base\":\"UserMenu_base__15rxV\",\"active\":\"UserMenu_active__2avPY\",\"link\":\"UserMenu_link__1COJv\",\"text\":\"UserMenu_text__1AL0l\",\"logout_btn\":\"UserMenu_logout_btn__3chft\",\"user_profile\":\"UserMenu_user_profile__s7xv6\"};","import axios from 'axios';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\n//bearer - носитель set делаем когда юзер зарегистрировался или залогинился, unset - когда вышел\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n// регистрация POST /users/signup\nexport const register = ({ name, email, password }) => async dispatch => {\n  dispatch(registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', {\n      name,\n      email,\n      password,\n    });\n\n    // при успешной регистрации сетим токен на header авторизации и все последующии запросі идут с єтим токеном\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\n// логин POST /users/login\nexport const login = ({ email, password }) => async dispatch => {\n  dispatch(loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', { email, password });\n\n    // и при логине сетим токен в header\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\n// разлогинить POST /users/logout\nexport const logout = () => async dispatch => {\n  dispatch(logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    // при логауте снимаем токен\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\n// получение текущего пользователя (refresh) GET /users/current\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  //забираем токен из стейта\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n","import { createAction } from '@reduxjs/toolkit';\n\n// экшены регистрации\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\n// экшены логина\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\n// экшены логаута\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\n// получение текущего пользователя (refresh)\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-logo\":\"App_App-logo__3uQSu\",\"App-logo-spin\":\"App_App-logo-spin__2GN5O\",\"App-header\":\"App_App-header__mdimN\",\"App-link\":\"App_App-link__pnavV\",\"App\":\"App_App__3yXQQ\",\"input\":\"App_input__3zYdv\"};"],"sourceRoot":""}